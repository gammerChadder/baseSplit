import { getOnchainKitConfig } from "../../OnchainKitConfig.js";
import { ANALYTICS_API_URL } from "../constants.js";
import { sendAnalytics } from "../utils/sendAnalytics.js";
import { useMemo } from "react";
const prepareAnalyticsPayload = (event, data) => {
  const config = getOnchainKitConfig("config");
  return {
    url: (config == null ? void 0 : config.analyticsUrl) ?? ANALYTICS_API_URL,
    headers: {
      "OnchainKit-App-Name": document.title
    },
    body: {
      apiKey: getOnchainKitConfig("apiKey") ?? "undefined",
      sessionId: getOnchainKitConfig("sessionId") ?? "undefined",
      timestamp: Date.now(),
      eventType: event,
      data,
      origin: window.location.origin
    }
  };
};
function sendAnalyticsPayload(event, data) {
  const config = getOnchainKitConfig("config");
  if (!(config == null ? void 0 : config.analytics)) {
    return;
  }
  const payload = prepareAnalyticsPayload(event, data);
  sendAnalytics(payload);
}
const useAnalytics = () => {
  return useMemo(
    () => ({
      sendAnalytics: sendAnalyticsPayload
    }),
    []
  );
};
export {
  sendAnalyticsPayload,
  useAnalytics
};
//# sourceMappingURL=useAnalytics.js.map
